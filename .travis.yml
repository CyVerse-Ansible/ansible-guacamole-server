---
language: python
python: "2.7"

sudo: required
dist: trusty
services:
  - docker

env:
  # - distribution: ubuntu
  #   version: 16.04
  #   ROLE_DIR: /etc/ansible/roles/ansible-guacamole-server
  #   TEST_DIR: /etc/ansible/roles/ansible-guacamole-server/tests
  - distribution: ubuntu
    version: 14.04
    ROLE_DIR: /etc/ansible/roles/ansible-guacamole-server
    TEST_DIR: /etc/ansible/roles/ansible-guacamole-server/tests

before_install:
  - 'sudo docker run --detach --interactive --tty --name=test_dummy --volume="$PWD":"$ROLE_DIR":rw cyverse/ansible-test:latest-"$distribution"-"$version" bash'

script:
  # 1. Syntax check
  - 'sudo docker exec test_dummy ansible-playbook --syntax-check --inventory-file="$TEST_DIR"/inventory "$TEST_DIR"/test.yml'

  # 2. Run playbook to execute role
  - 'sudo docker exec test_dummy ansible-playbook --connection=local --inventory-file="$TEST_DIR"/inventory "$TEST_DIR"/test.yml'

  # 3. HERE, WRITE SOME TESTS to verify that your role has produced the desired
  # effect on the target system. Your tests should be bash commands that
  # complete with an exit status of 0 for a pass, and non-zero for a failure.
  #
  # This example tests whether 'hello' exists in /tmp/hello.txt.
  # - >
  #   sudo docker exec test_dummy bash -c cat /tmp/hello.txt | grep -q 'hello'
  #   && (echo 'Test for role result: pass' && exit 0)
  #   || (echo 'Test for role result: fail' && exit 1)

  # 4. Idempotence test (run playbook again to confirm nothing changes)
  # - >
  #   sudo docker exec test_dummy ansible-playbook /etc/ansible/roles/role_under_test/tests/test.yml -i tests/inventory --connection=local
  #   | grep -q 'changed=0.*failed=0'
  #   && (echo 'Idempotence test: pass' && exit 0)
  #   || (echo 'Idempotence test: fail' && exit 1)

# notifications:
#   webhooks:
#     urls:
#       - https://galaxy.ansible.com/api/v1/notifications
#     on_success: always
# on_failure: never
