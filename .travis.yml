---
language: python
python: "2.7"

sudo: required
dist: trusty
services:
  - docker

env:
  - distribution: ubuntu
    version: 16.04
    ROLE_DIR: /etc/ansible/roles/ansible-guacamole-server
    TEST_DIR: /etc/ansible/roles/ansible-guacamole-server/tests
  - distribution: ubuntu
    version: 14.04
    ROLE_DIR: /etc/ansible/roles/ansible-guacamole-server
    TEST_DIR: /etc/ansible/roles/ansible-guacamole-server/tests

before_install:
  - 'sudo docker run --privileged --cap-add SYS_PTRACE --detach --interactive --tty --name=test_dummy --volume="$PWD":"$ROLE_DIR":rw cyverse/ansible-test:latest-"$distribution"-"$version" bash'

script:
  # 1. Syntax check
  - 'sudo docker exec test_dummy ansible-playbook --syntax-check --inventory-file="$TEST_DIR"/inventory "$TEST_DIR"/test.yml'

  # 2. Run playbook to execute role
  - 'sudo docker exec test_dummy ansible-playbook --connection=local --inventory-file="$TEST_DIR"/inventory "$TEST_DIR"/test.yml'

  # 3. Tests!

  # Test whether Tomcat CorsFilter was added
  - >
    sudo docker exec test_dummy /bin/cat /var/lib/tomcat7/webapps/guacamole/WEB-INF/web.xml | grep -q '<filter-class>org.apache.catalina.filters.CorsFilter</filter-class>'
    && (echo 'Test for role result: pass' && exit 0)
    || (echo 'Test for role result: fail' && exit 1)

  # # Test whether Tomcat port specification worked
  - >
    sudo docker exec test_dummy /bin/cat /var/lib/tomcat7/conf/server.xml | grep -q '<Connector port="{{ tomcat_port }}" protocol="HTTP/1.1"'
    && (echo 'Test for role result: pass' && exit 0)
    || (echo 'Test for role result: fail' && exit 1)

  # 4. Idempotence test (run playbook again to confirm nothing changes)
  # - >
  #   sudo docker exec test_dummy ansible-playbook /etc/ansible/roles/role_under_test/tests/test.yml -i tests/inventory --connection=local
  #   | grep -q 'changed=0.*failed=0'
  #   && (echo 'Idempotence test: pass' && exit 0)
  #   || (echo 'Idempotence test: fail' && exit 1)

# notifications:
#   webhooks:
#     urls:
#       - https://galaxy.ansible.com/api/v1/notifications
#     on_success: always
# on_failure: never
